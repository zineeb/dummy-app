services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    image: app
    hostname: mydocker
    user: 1000:1000
    ports:
      - 1337:${PORT}
    environment:
      PORT= ${PORT}
      REDIS_HOST= ${REDIS_HOST}
      REDIS_PORT= ${REDIS_PORT}
      MYSQL_HOST= ${MYSQL_HOST}
      MYSQL_PORT= ${MYSQL_PORT}
      MYSQL_DB= ${MYSQL_DB}
      MYSQL_USERNAME= ${MYSQL_USERNAME}
      MYSQL_PASSWORD= ${MYSQL_PASSWORD}
      FILE_PATH_TO_CHECK= ${FILE_PATH_TO_CHECK}
    volumes:
      - ./data/dummy.txt:app/data/dummy.txt
      - ./index.ts:/app/index.ts
    networks:
      - db-net
    restart: unless-stopped
    depends_on:
      - redis
      - mysql

  mysql:
    image: mysql:8
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE= ${MYSQL_DATABASE}
      - MYSQL_USER= ${MYSQL_USER}
      - MYSQL_PASSWORD= ${MYSQL_PASSWORD}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    networks:
      - db-net
    volumes:
      - data:/var/lib/mysql

  redis:
    image: redis:7
    restart: unless-stopped
    networks:
      - db-net

networks:
  db-net:

volumes:




#version: '3.8'
#services:
#  app:
#    build:
#      context: .
#      target: development
#    ports:
#      - "1337:1337"
#    environment:
#      PORT: 1337
#      REDIS_HOST: redis
#      REDIS_PORT: 6379
#      MYSQL_HOST: mysql
#      MYSQL_PORT: 3306
#      MYSQL_DB: db_test
#      MYSQL_USERNAME: user
#      MYSQL_PASSWORD: password
#      FILE_PATH_TO_CHECK: /data/dummy.txt
#    volumes:
#      - .:/app
#      - ./data/dummy.txt:/data/dummy.txt
#    depends_on:
#      - mysql
#      - redis
#    hostname: mydocker
#
#  mysql:
#    image: mysql:5.7
#    environment:
#      MYSQL_ROOT_PASSWORD: password
#      MYSQL_DATABASE: db_test
#      MYSQL_USER: user
#      MYSQL_PASSWORD: password
#    ports:
#      - "3306:3306"
#    volumes:
#      - mysql-data:/var/lib/mysql
#
#  redis:
#    image: redis:latest
#    ports:
#      - "6379:6379"
#
#volumes:
#  mysql-data:
#    driver: local
